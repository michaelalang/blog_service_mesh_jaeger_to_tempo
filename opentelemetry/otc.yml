apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: user
  namespace: istio-system
spec:
  config:
    connectors:
      routing:
        table:
          - pipelines:
              - traces/tempo
              - traces/jaeger-tempo
            statement: route()
    exporters:
      otlp/tempo:
        auth:
          authenticator: bearertokenauth
        endpoint: tempo-tempo-gateway.tempo.svc.cluster.local:8090
        headers:
          X-Scope-OrgID: user
        sending_queue:
          queue_size: 150000
        tls:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      otlp/jaeger:
        endpoint: http://jaeger-all-in-one-inmemory-collector.distributed-tracing.svc.cluster.local:4317
        tls:
          insecure: true
    extensions:
      bearertokenauth:
        filename: /var/run/secrets/kubernetes.io/serviceaccount/token
    processors:
      k8sattributes: {}
      probabilistic_sampler/jaeger:
        sampling_percentage: 100
      probabilistic_sampler/tempo:
        sampling_percentage: 100
    receivers:
      jaeger:
        protocols:
          thrift_compact:
            endpoint: 0.0.0.0:6831
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      zipkin:
        endpoint: 0.0.0.0:9411
    service:
      extensions:
        - bearertokenauth
      pipelines:
        traces:
          exporters:
            - routing
          receivers:
            - otlp
        traces/jaeger:
          exporters:
            - otlp/jaeger
          processors:
            - k8sattributes
            - probabilistic_sampler/jaeger
          receivers:
            - jaeger
            - zipkin
        traces/jaeger-tempo:
          exporters:
            - otlp/jaeger
          processors:
            - k8sattributes
            - probabilistic_sampler/jaeger
          receivers:
            - routing
        traces/tempo:
          exporters:
            - otlp/tempo
          processors:
            - k8sattributes
            - probabilistic_sampler/tempo
          receivers:
            - routing
      telemetry:
        metrics:
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: 0.0.0.0
                    port: 8888
  configVersions: 3
  daemonSetUpdateStrategy: {}
  deploymentUpdateStrategy: {}
  ingress:
    route: {}
  ipFamilyPolicy: SingleStack
  managementState: managed
  mode: statefulset
  networkPolicy:
    enabled: true
  observability:
    metrics:
      enableMetrics: true
  podDnsConfig: {}
  replicas: 1
  resources: {}
  targetAllocator:
    allocationStrategy: consistent-hashing
    collectorNotReadyGracePeriod: 30s
    collectorTargetReloadInterval: 30s
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      scrapeInterval: 30s
    resources: {}
  upgradeStrategy: automatic
